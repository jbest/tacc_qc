import csv
import argparse
from pathlib import Path

THUMB_DESIGNATOR = '_thumb'
MED_DESIGNATOR = '_med'

ap = argparse.ArgumentParser()
ap.add_argument("-i", "--input", required=True, \
    help="Path to the input file generated by tacc_check.py.")

args = vars(ap.parse_args())
input_file = args['input']

def create_derivative(web_image_path=None, derivative_designator=None):
    if web_image_path.exists():
        print('full image exists')
        # Create derivative name
        derivative_file_name = full_image_path.stem + derivative_designator + full_image_path.suffix
        # Check if derivative image currently exists
        derivative_file_path = full_image_path.parent.joinpath(derivative_file_name)
        #print('thumb_file_path:', thumb_file_path)
        if derivative_file_path.exists():
            print('Derivative exists:', derivative_file_path)
        else:
            # Generate derivative
            print('TODO: generate derivative:', derivative_file_path)
    else:
        print('Full image missing:', web_image_path)

with open(input_file) as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        #print(row['catalog_number'])
        if row['web_jpg_path']:
            #print(row['web_jpg_path'])
            full_image_path = Path(row['web_jpg_path'])
            if not row['web_jpg_thumb_path']:
                print('missing thumb record:', row['web_jpg_path'])
                # Create thumb derivative if needed
                create_derivative(web_image_path=full_image_path, derivative_designator=THUMB_DESIGNATOR)
            if not row['web_jpg_med_path']:
                print('missing med record:', row['web_jpg_path'])
                create_derivative(web_image_path=full_image_path, derivative_designator=MED_DESIGNATOR)
